// Copyright (c) Facebook, Inc. and its affiliates.
//
// This source code is licensed under both the MIT license found in the
// LICENSE-MIT file in the root directory of this source tree and the Apache
// License, Version 2.0 found in the LICENSE-APACHE file in the root directory
// of this source tree.

//! This module contains the Reader trait to deserialize the tool's serde-compatible
//! objects from a formatted file, as well as implementations of the trait.

use crate::fixture_generator::generator::{Delta, Metadata, State};

/// Interface for reading output generated by the tool.
pub trait Reader {
    /// Reads a metadata object.
    fn read_metadata(&mut self) -> Option<Metadata>;

    /// Reads a state object for a given epoch.
    fn read_state(&mut self, epoch: u32) -> Option<State>;

    /// Reads a delta object for a given epoch.
    fn read_delta(&mut self, epoch: u32) -> Option<Delta>;
}

/// YAML implementor of Reader trait.
pub mod yaml;

#[cfg(test)]
mod tests;
