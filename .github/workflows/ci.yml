name: CI
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    name: ${{matrix.name}}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Test the core crate (akd_core)
            package: akd_core
            flags: --features blake3

          - name: Test the core crate (akd_core) with no standard library
            package: akd_core
            flags: --features nostd,blake3,vrf --no-default-features

          - name: Test the core crate (akd_core) with protobuf and serde enabled
            package: akd_core
            flags: --features protobuf,serde_serialization,blake3

          - name: Test the core crate (akd_core) with truncated SHA512 (sha512_256) in no-std environment
            package: akd_core
            flags: --features nostd,sha512_256,vrf --no-default-features

          - name: Test the core crate (akd_core) with no standard library and Sha3 512 hashing
            package: akd_core
            flags: --features nostd,sha3_512,vrf --no-default-features

          - name: Test the base library, with default features
            package: akd
            flags:

          - name: Test the base library, with truncated SHA512 hashing (sha512_256)
            package: akd
            flags: --features sha512_256,public_auditing --no-default-features

          - name: Test the base library, enabling runtime metrics processing
            package: akd
            flags: --features runtime_metrics

          - name: Test the local auditor, with default features
            package: akd_local_auditor
            flags:

          - name: Test the base client library, with default features
            package: akd_client
            flags:

          - name: Test the client for wasm and SHA3-256 hashing
            package: akd_client
            flags: --no-default-features --features wasm,sha3_256

          - name: Test AKD with protobuf serialization of the audit proofs
            package: akd
            flags: --features public_auditing

          - name: Test the client for wasm and BLAKE3 hashing
            package: akd_client
            flags: --no-default-features --features wasm,blake3

          - name: Test the client with protobuf serialization
            package: akd_client
            flags: --features protobuf_serialization

    steps:
      - uses: actions/checkout@main

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --package ${{matrix.package}} ${{matrix.flags}}

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Install minimal stable with clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true

      - name: Run Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all -- -D clippy::all -D warnings

  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Install minimal stable with rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          override: true

      - name: Build library (make sure all build.rs files have generated necessary code)
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --package akd_core -F blake3

      - name: Run rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  wasm-tests:
    name: ${{matrix.name}}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Build WASM compatible binary
            command: wasm-pack build --features wasm

          - name: Test wasm-pack with default profile (blake3)
            command: wasm-pack test --node --features wasm

          - name: Test wasm-pack with SHA3_256 and no default features
            command: wasm-pack test --node --no-default-features --features wasm,sha3_256

    steps:
      - uses: actions/checkout@main

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Run test
        working-directory: ./akd_client
        run: ${{matrix.command}}
